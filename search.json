[{"path":[]},{"path":"https://debruine.github.io/webmorphR.dlib/articles/facetrain.html","id":"load-images","dir":"Articles","previous_headings":"Basic setup","what":"Load images","title":"facetrain","text":"First, load faces templates. London demo set really big images (1350x1350 pixels) ’m going resize make later functions run faster.","code":"stim <- demo_stim(\"london\") |>   resize(0.5)"},{"path":"https://debruine.github.io/webmorphR.dlib/articles/facetrain.html","id":"select-template-points","dir":"Articles","previous_headings":"Basic setup","what":"Select template points","title":"facetrain","text":"Next, select template points want make model . , ’re going train simple model just centres eyes.","code":"stim_2pt <- subset_tem(stim, 0, 1)  # plot to check stim_2pt[1:5] |>    draw_tem(pt.size = 20) |>    plot()"},{"path":"https://debruine.github.io/webmorphR.dlib/articles/facetrain.html","id":"xml-file","dir":"Articles","previous_headings":"Basic setup","what":"XML file","title":"facetrain","text":"Use tem_to_xml() save images directory, write template points xml file, run python script finds “bounding box” face. function returns location xml file, ’ll need next step. can visualise bounding boxes check anything went wrong.  lot images, can subset index just look sample. Set crop FALSE draw template view bounding box full image context.","code":"xml <- tem_to_xml(stim_2pt, dir = \"images\") get_bounds(xml, crop = TRUE) |> plot(nrow = 6) get_bounds(xml, crop = FALSE, subset = 1:10) |>    draw_tem(line.color = \"green\",             line.size = 10,             line.alpha = 1) |>   plot(nrow = 2)"},{"path":"https://debruine.github.io/webmorphR.dlib/articles/facetrain.html","id":"facetrain","dir":"Articles","previous_headings":"Basic setup","what":"Facetrain","title":"facetrain","text":"Now run facetrain() using XML file. create shape predictor output file can use auto-delineation.","code":"facetrain(xml, \"eyes.dat\")"},{"path":"https://debruine.github.io/webmorphR.dlib/articles/facetrain.html","id":"test","dir":"Articles","previous_headings":"Basic setup","what":"Test","title":"facetrain","text":"Test shape predictor file images  perfect, didn’t many images used default settings. probably worse --set images:  change size image, keeping faces center? Apply different croppings first image.  ’s pretty bad. change face location image?  Can handle rotation?","code":"eyes <- \"eyes.dat\"  stim_eyes <- stim |>   subset(1:5) |>   crop(.5, .7) |>   auto_delin(replace = TRUE,              model_path = \"eyes.dat\")  # plot to check stim_eyes[1:5] |>    draw_tem(pt.size = 20) |>    plot() smiling <- demo_stim(\"smiling\", 1:5) |>   resize(0.5)  smiling_eyes <- smiling |>   crop(0.5, 0.7) |>   auto_delin(replace = TRUE,              model_path = eyes)  # plot to check smiling_eyes |>    draw_tem(pt.size = 20) |>    plot() smiling |>   subset(1) |>   rep(5) |>   crop(width = seq(1, .5, length.out = 5),        height = seq(1, .7, length.out = 5)) |>   auto_delin(replace = TRUE,              model_path = eyes) |>   draw_tem(pt.size = 20) |>    plot() smiling |>   subset(2) |>   rep(5) |>   crop(1, 1,         x_off = seq(0, .2, .05),        y_off = seq(0, .2, .05)) |>   auto_delin(replace = TRUE,              model_path = eyes) |>   draw_tem(pt.size = 20) |>    plot() smiling |>   subset(3) |>   rep(5) |>   crop(.6, .6) |>   rotate(degrees = seq(-45, 45, length.out = 5)) |>   auto_delin(replace = TRUE,              model_path = eyes) |>   draw_tem(pt.size = 20) |>    plot()"},{"path":"https://debruine.github.io/webmorphR.dlib/articles/facetrain.html","id":"train-on-more-images","dir":"Articles","previous_headings":"","what":"Train on more images","title":"facetrain","text":"Clearly, ’s something lacking training. Maybe don’t enough images, ’re diverse enough (London set laboriously manually standardised). Make images permuting original images. step, add previous stimulus lists together make larger permuted set. Start rotation, since takes longest. Combine image sets give unique name. Check random subsample make sure template points changed size, location rotation images.","code":"rotations <- stim_2pt |>   rotate(seq(-20, 20, 1), patch = TRUE)  crops <- c(stim_2pt, rotations) |>   crop(seq(.5, 1, .05), seq(.5, 1, .05))  sizes <- c(stim_2pt, rotations, crops) |>   resize(seq(.5, .9, .1))  offsets <- expand.grid(   x = seq(0, 0.25, 0.05),   y = seq(0, 0.15, 0.05) )  locations <- c(stim_2pt, rotations, crops, sizes) |>   crop(1, 1,         x_off = offsets$x,        y_off = offsets$y) all_stim <- c(   stim_2pt,    rotations,    crops,   sizes,    locations ) |>   setnames(paste0(\"face_\", 1:1632)) set.seed(90210) idx <- sample(seq_along(all_stim), 12) samp <- all_stim[idx]  # plot to check samp |>   draw_tem(pt.size = 20) |>    plot(nrow = 2)"},{"path":"https://debruine.github.io/webmorphR.dlib/articles/facetrain.html","id":"xml-file-1","dir":"Articles","previous_headings":"Train on more images","what":"XML file","title":"facetrain","text":"take quite now. takes computer 1 minute detect 100 face locations XML file. Luckily, needs done (make sure comment code ’ve run don’t accidentally run ). Time coffee!","code":"all_xml <- tem_to_xml(all_stim, dir = \"allimages\")"},{"path":"https://debruine.github.io/webmorphR.dlib/articles/facetrain.html","id":"default-parameters","dir":"Articles","previous_headings":"Train on more images","what":"Default parameters","title":"facetrain","text":"Train model default parameters. ’ll use tictoc see long training takes.","code":"tictoc::tic() facetrain(all_xml, \"eyes-default.dat\") train_timing <- tictoc::toc()"},{"path":"https://debruine.github.io/webmorphR.dlib/articles/facetrain.html","id":"test-again","dir":"Articles","previous_headings":"Train on more images","what":"Test Again","title":"facetrain","text":"Test shape predictor file random subset images. ’ll testing fair, bit, write function make easier. ’ll add --set examples see well models generalise.  terrible, perfect. Let’s try changing defaults.","code":"oos <- demo_stim(\"zoom\")  viz_model <- function(model_path) {   in_set <- samp |>     auto_delin(replace = TRUE,                model_path = model_path) |>      draw_tem(pt.size = 20) |>      plot(nrow = 2)      sm_set <- smiling |>     auto_delin(replace = TRUE,                model_path = model_path) |>     draw_tem(pt.size = 20) |>      plot()      out_set <- oos |>     auto_delin(replace = TRUE,                model_path = model_path) |>     draw_tem(pt.size = 20) |>      plot()      c(in_set, sm_set, out_set) |> plot(nrow = 3) } tictoc::tic() viz_model(\"eyes-default.dat\") pred_timing <- tictoc::toc() #> 22.018 sec elapsed"},{"path":"https://debruine.github.io/webmorphR.dlib/articles/facetrain.html","id":"changing-defaults","dir":"Articles","previous_headings":"","what":"Changing Defaults","title":"facetrain","text":"See ?facetrain explanations arguments, original source Adrian Rosebrock PyImageSearch: Training custom dlib shape predictor. Set list models timings store model construction prediction timings .","code":"models <- list(   default = \"eyes-default.dat\",   td = \"eyes-td_7.dat\",   nu = \"eyes-nu_.1.dat\",   cd = \"eyes-cd_18.dat\",   fps = \"eyes-fps_600.dat\",   nts = \"eyes-nts_75.dat\",   oa = \"eyes-oa_10.dat\",   jitter = \"eyes-jitter_.2.dat\" ) train_timings <- list(   default = train_timing  )  pred_timings <- list(   default = pred_timing  )"},{"path":"https://debruine.github.io/webmorphR.dlib/articles/facetrain.html","id":"tree-depth","dir":"Articles","previous_headings":"Changing Defaults","what":"Tree Depth","title":"facetrain","text":"Let’s try increasing tree_depth 5 7. Larger values make model accurate, slower making predictions.","code":"tictoc::tic() facetrain(all_xml, models$td,           tree_depth = 7) train_timings$td <- tictoc::toc() tictoc::tic() viz_model(models$td) pred_timings$td <- tictoc::toc() #> 28.036 sec elapsed"},{"path":"https://debruine.github.io/webmorphR.dlib/articles/facetrain.html","id":"nu","dir":"Articles","previous_headings":"Changing Defaults","what":"Nu","title":"facetrain","text":"Decrease nu 0.5 0.1. Decreasing number helps models generalise, requires lot training images.","code":"tictoc::tic() facetrain(all_xml, models$nu,           nu = 0.1) train_timings$nu <- tictoc::toc() tictoc::tic() viz_model(models$nu) pred_timings$nu <- tictoc::toc() #> 21.594 sec elapsed"},{"path":"https://debruine.github.io/webmorphR.dlib/articles/facetrain.html","id":"cascade-depth","dir":"Articles","previous_headings":"Changing Defaults","what":"Cascade Depth","title":"facetrain","text":"Increase cascade_depth 15 18. make model accurate, file size larger.","code":"tictoc::tic() facetrain(all_xml, models$cd,           cascade_depth = 18) train_timings$cd <- tictoc::toc() tictoc::tic() viz_model(models$cd) pred_timings$cd <- tictoc::toc() #> 22.491 sec elapsed"},{"path":"https://debruine.github.io/webmorphR.dlib/articles/facetrain.html","id":"feature-pool-size","dir":"Articles","previous_headings":"Changing Defaults","what":"Feature Pool Size","title":"facetrain","text":"Increase feature_pool_size 400 600. make model accurate, slower making predictions.","code":"tictoc::tic() facetrain(all_xml, models$fps,           feature_pool_size = 600) train_timings$fps <- tictoc::toc() tictoc::tic() viz_model(models$fps) pred_timings$fps <- tictoc::toc() #> 22.013 sec elapsed"},{"path":"https://debruine.github.io/webmorphR.dlib/articles/facetrain.html","id":"number-of-test-splits","dir":"Articles","previous_headings":"Changing Defaults","what":"Number of Test Splits","title":"facetrain","text":"Increase test_splits 50 75. make model accurate, training take longer.","code":"tictoc::tic() facetrain(all_xml, models$nts,           num_test_splits = 75) train_timings$nts <- tictoc::toc() tictoc::tic() viz_model(models$nts) pred_timings$nts <- tictoc::toc() #> 21.201 sec elapsed"},{"path":"https://debruine.github.io/webmorphR.dlib/articles/facetrain.html","id":"oversampling-amount","dir":"Articles","previous_headings":"Changing Defaults","what":"Oversampling Amount","title":"facetrain","text":"Increase number random deformations 5 10. can increase generalisation, also increase training time.","code":"tictoc::tic() facetrain(all_xml, models$oa,           oversampling_amount = 10) train_timings$oa <- tictoc::toc() tictoc::tic() viz_model(models$oa) pred_timings$oa <- tictoc::toc() #> 23.247 sec elapsed"},{"path":"https://debruine.github.io/webmorphR.dlib/articles/facetrain.html","id":"jitter","dir":"Articles","previous_headings":"Changing Defaults","what":"Jitter","title":"facetrain","text":"Double jitter 0.1 0.2. increases amount deformation applied oversampling.","code":"tictoc::tic() facetrain(all_xml, models$jitter,           jitter = 0.2) train_timings$jitter <- tictoc::toc() tictoc::tic() viz_model(models$jitter) pred_timings$jitter <- tictoc::toc() #> 21.639 sec elapsed"},{"path":"https://debruine.github.io/webmorphR.dlib/articles/facetrain.html","id":"model-size-and-speed","dir":"Articles","previous_headings":"","what":"Model size and speed","title":"facetrain","text":"Model size MB. Speed minutes.","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lisa DeBruine. Author, maintainer.","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"DeBruine L (2022). webmorphR.dlib: Face Detection webmorphR. R package version 0.0.0.9001.","code":"@Manual{,   title = {webmorphR.dlib: Face Detection for webmorphR},   author = {Lisa DeBruine},   year = {2022},   note = {R package version 0.0.0.9001}, }"},{"path":"https://debruine.github.io/webmorphR.dlib/index.html","id":"webmorphrdlib","dir":"","previous_headings":"","what":"Face Detection for webmorphR","title":"Face Detection for webmorphR","text":"package provides dlib shape models scripts use package webmorphR. files used different auto-delineations python (although may change use dlib C++ directly). also provides (experimental) functions training shape models.","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Face Detection for webmorphR","text":"can install development version webmorphR.dlib GitHub : Now load webmorphR package (’s installed webmorphR.dlib) check can use auto-delineation function.  doesn’t work, probably need sort python installation. auto_delin() function load required python modules. get errors , may need install cmake dlib first. found instructions useful dlib installation mac.","code":"# install.packages(\"remotes\") remotes::install_github(\"debruine/webmorphR.dlib\") library(webmorphR) #>  #> ************ #> Welcome to webmorphR. For support and examples visit: #> https://debruine.github.io/webmorphR/ #> ************  # load demo images and delineate stim_70_point <- demo_stim() |>    auto_delin(model = \"dlib70\",              replace = TRUE)  # plot with template points draw_tem(stim_70_point) |> plot() reticulate::install_python()"},{"path":[]},{"path":"https://debruine.github.io/webmorphR.dlib/index.html","id":"dlib7","dir":"","previous_headings":"Templates","what":"dlib7","title":"Face Detection for webmorphR","text":"5-point template Davis King’s shape_predictor_5_face_landmarks.dat trained 7198 faces dlib 5-point face landmark dataset. added two points eye centres (0 1) order aid alignment eyes. ’s fast auto-delineation useful just need align faces position, orientation general size.","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/index.html","id":"dlib70","dir":"","previous_headings":"Templates","what":"dlib70","title":"Face Detection for webmorphR","text":"68-point template Davis King’s shape_predictor_68_face_landmarks.dat trained iBUG 300-W dataset. added two points eye centres (0 1) order aid alignment eyes. C. Sagonas, E. Antonakos, G, Tzimiropoulos, S. Zafeiriou, M. Pantic. 300 faces --wild challenge: Database results. Image Vision Computing (IMAVIS), Special Issue Facial Landmark Localisation “--Wild”. 2016. license dataset excludes commercial use, trained model can used commercial product.","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/demo_stim.html","id":null,"dir":"Reference","previous_headings":"","what":"Demo stimuli — demo_stim","title":"Demo stimuli — demo_stim","text":"Function exported webmorphR::demo_stim() easier testing.","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/dlib_auto_delin.html","id":null,"dir":"Reference","previous_headings":"","what":"dlib Auto-Delineation — dlib_auto_delin","title":"dlib Auto-Delineation — dlib_auto_delin","text":"Automatically delineate faces using dlib shape predictor models.","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/dlib_auto_delin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dlib Auto-Delineation — dlib_auto_delin","text":"","code":"dlib_auto_delin(   stimuli,   model = c(\"dlib7\", \"dlib70\"),   replace = FALSE,   model_path = NULL )"},{"path":"https://debruine.github.io/webmorphR.dlib/reference/dlib_auto_delin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dlib Auto-Delineation — dlib_auto_delin","text":"stimuli list class stimlist model built-models (dlib7, dlib70) replace FALSE, gets templates images template model_path path custom dlib .dat landmark file use (model ignored set)","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/dlib_auto_delin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dlib Auto-Delineation — dlib_auto_delin","text":"stimlist templates","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/dlib_auto_delin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dlib Auto-Delineation — dlib_auto_delin","text":"","code":"if (FALSE) {   auto_dlib7 <- demo_stim() |>     dlib_auto_delin(replace = TRUE) # replace existing templates    auto_dlib70 <- demo_stim() |>     dlib_auto_delin(model = \"dlib70\", replace = TRUE)    c(auto_dlib7, auto_dlib70) |>     draw_tem() |>     plot(nrow = 1) }"},{"path":"https://debruine.github.io/webmorphR.dlib/reference/draw_tem.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Template — draw_tem","title":"Draw Template — draw_tem","text":"Function exported webmorphR::draw_tem() easier testing.","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/facetrain.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a dlib shape predictor — facetrain","title":"Train a dlib shape predictor — facetrain","text":"Implements python script PyImageSearch train custom shape predictor model using dlib OpenCV. Produces shape predictor file xml file containing image paths, bounding boxes training points, usually created tem_to_xml(). Adrian Rosebrock, Training custom dlib shape predictor, PyImageSearch, https://www.pyimagesearch.com/2019/12/16/training--custom-dlib-shape-predictor/, accessed 13 May 2022","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/facetrain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a dlib shape predictor — facetrain","text":"","code":"facetrain(   xml,   output = \"shape_predictor.dat\",   tree_depth = 5L,   nu = 0.5,   cascade_depth = 15L,   feature_pool_size = 400L,   num_test_splits = 50L,   oversampling_amount = 5L,   jitter = 0.1,   num_threads = 0L )"},{"path":"https://debruine.github.io/webmorphR.dlib/reference/facetrain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a dlib shape predictor — facetrain","text":"xml xml file containing bounding boxes training points, usually created tem_to_xml output name .dat file save model tree_depth depth regression tree; typically 2:8 nu regularization parameter; must 0:1 cascade_depth number cascades used train shape predictor; typically 6:18 feature_pool_size number pixels used generate features random trees cascade num_test_splits selects best features cascade training oversampling_amount controls number random deformations per image (.e., data augmentation) training shape predictor; typically 0:50 jitter amount oversampling translation jitter apply; typically 0 0.5 num_threads number threads/CPU cores used training","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/facetrain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a dlib shape predictor — facetrain","text":"path output file (invisibly)","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/facetrain.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Train a dlib shape predictor — facetrain","text":"NB: python script cause R crash try fit model fewer 8 training faces. text Adrian Rosebrock's explanation: tree_depth: depth regression tree -- typical values 2 8; total 2^tree_depth leaves tree; small values tree_depth faster less accurate larger values generate trees deeper, accurate, run far slower making predictions nu: regularization parameter range 0:1 used help model generalize -- values closer 1 make model fit training data better, cause overfitting; values closer 0 help model generalize require us training data order 1000s data points cascade_depth: number cascades used train shape predictor -- typical values 6 18; parameter dramatic impact accuracy output size model; cascades , accurate model can potentially , also larger output size feature_pool_size: number pixels used generate features random trees cascade -- larger pixel values make shape predictor accurate, slower; use large values speed problem, otherwise smaller values resource constrained/embedded devices num_test_splits: selects best features cascade training -- larger value , longer take train (potentially) accurate model oversampling_amount: controls number random deformations per image (.e., data augmentation) training shape predictor -- applies supplied number random deformations, thereby performing regularization increasing ability model generalize oversampling_translation_jitter: amount translation jitter apply -- dlib docs recommend values range 0 0.5 num_threads: number threads/CPU cores used training -- defaults number available cores system, can supply integer value","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/facetrain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train a dlib shape predictor — facetrain","text":"","code":"if (FALSE) {   # requires python and dlib   xml <- system.file(\"demo/_images.xml\", package = \"webmorphR.dlib\")    # train model   newmodel <- facetrain(xml)    # check model on new images   newdelin <- demo_stim(\"zoom\") |>     auto_delin(replace = TRUE, dat_file = newmodel)    newdelin |> draw_tem() |> plot(nrow = 6) }"},{"path":"https://debruine.github.io/webmorphR.dlib/reference/get_bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Face Bounds — get_bounds","title":"Get Face Bounds — get_bounds","text":"Get bounds detected tem_to_xml() (uses dlib.get_frontal_face_detector()).","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/get_bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Face Bounds — get_bounds","text":"","code":"get_bounds(xml, crop = FALSE, subset = NULL)"},{"path":"https://debruine.github.io/webmorphR.dlib/reference/get_bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Face Bounds — get_bounds","text":"xml file path XML file created tem_to_xml() crop Whether crop image bounds subset indices images subset","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/get_bounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Face Bounds — get_bounds","text":"stimlist 4-point template top-left, top-right, bottom-right, bottom-left corners bounding box, optionally cropped box","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/get_bounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Face Bounds — get_bounds","text":"","code":"xml <- system.file(\"demo/_images.xml\", package = \"webmorphR.dlib\") bounds <- get_bounds(xml) cropped <- get_bounds(xml, crop = TRUE)  if (FALSE) {   # plot images   bounds |>     draw_tem(line.alpha = 1, line.color = \"green\") |>     c(cropped) |>     plot(nrow = 1) }"},{"path":"https://debruine.github.io/webmorphR.dlib/reference/tem_to_xml.html","id":null,"dir":"Reference","previous_headings":"","what":"Templates to XML — tem_to_xml","title":"Templates to XML — tem_to_xml","text":"Make XML file template points set stimuli. use facetrain training dlib models.","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/tem_to_xml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Templates to XML — tem_to_xml","text":"","code":"tem_to_xml(stimuli, dir = \"images\", imageset = \"Image Set\")"},{"path":"https://debruine.github.io/webmorphR.dlib/reference/tem_to_xml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Templates to XML — tem_to_xml","text":"stimuli list class stimlist dir path save images XML file imageset name image set (XML file)","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/tem_to_xml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Templates to XML — tem_to_xml","text":"path xml file (invisibly)","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/tem_to_xml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Templates to XML — tem_to_xml","text":"","code":"xml <- system.file(\"demo/_images.xml\", package = \"webmorphR.dlib\")  # read the first 10 lines of the xml file readLines(xml, n = 10) #>  [1] \"<?xml version='1.0' encoding='ISO-8859-1'?>\"                                         #>  [2] \"<?xml-stylesheet type='text/xsl' href='image_metadata_stylesheet.xsl'?>\"             #>  [3] \"<dataset>\"                                                                           #>  [4] \"<name>Young adult composite faces<\/name>\"                                            #>  [5] \"<images>\"                                                                            #>  [6] \"  <image file='/Users/lisad/rproj/debruine/webmorphR.dlib/inst/demo/f_african.jpg'>\" #>  [7] \"    <box top='231' left='200' width='268' height='267'>\"                             #>  [8] \"      <part name='000' x='281' y='312'/>\"                                            #>  [9] \"      <part name='001' x='388' y='311'/>\"                                            #> [10] \"      <part name='002' x='281' y='306'/>\""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/xml_to_tem.html","id":null,"dir":"Reference","previous_headings":"","what":"XML to Templates — xml_to_tem","title":"XML to Templates — xml_to_tem","text":"Make webmorph templates XML formatted point files.","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/xml_to_tem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"XML to Templates — xml_to_tem","text":"","code":"xml_to_tem(xml)"},{"path":"https://debruine.github.io/webmorphR.dlib/reference/xml_to_tem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"XML to Templates — xml_to_tem","text":"xml file path XML file","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/xml_to_tem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"XML to Templates — xml_to_tem","text":"stimlist tem points","code":""},{"path":"https://debruine.github.io/webmorphR.dlib/reference/xml_to_tem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"XML to Templates — xml_to_tem","text":"","code":"if (FALSE) {   # requires python and dlib   xml <- system.file(\"demo/_images.xml\", package = \"webmorphR.dlib\")   stimuli <- xml_to_tem(xml)   stimuli |> draw_tem() |> plot(nrow = 2) }"},{"path":"https://debruine.github.io/webmorphR.dlib/news/index.html","id":"webmorphrdlib-0009001","dir":"Changelog","previous_headings":"","what":"webmorphR.dlib 0.0.0.9001","title":"webmorphR.dlib 0.0.0.9001","text":"Added NEWS.md file track changes package. Pkgdown site https://debruine.github.io/webmorphR.dlib/ Added xml_to_tem() view_bounds() functions.","code":""}]
